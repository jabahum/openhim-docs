(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{106:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return u}));var r=n(1),a=(n(0),n(597));const i={id:"overview",title:"Audits overview",sidebar_label:"Overview",keywords:["OpenHIM","API","Audit","Overview"],description:"An overview of the OpenHIM Audits"},o=[{value:"ATNA Audit",id:"atna-audit",children:[]}],p={rightToc:o},c="wrapper";function u({components:e,...t}){return Object(a.b)(c,Object(r.a)({},p,t,{components:e,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Allows for the management of OpenHIM audits."),Object(a.b)("p",null,"The OpenHIM will generate audit events on application start/stop, as well as user authentication. These events can either be sent to the OpenHIM\u2019s own internal audit repository, or to an external repository."),Object(a.b)("h2",{id:"atna-audit"},"ATNA Audit"),Object(a.b)("p",null,"The OpenHIM provides full support as an Audit Repository actor in the IHE ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://wiki.ihe.net/index.php/Audit_Trail_and_Node_Authentication"}),"ATNA")," profile."))}u.isMDXComponent=!0},597:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return s}));var r=n(0),a=n.n(r),i=a.a.createContext({}),o=function(e){var t=a.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},p=function(e){var t=o(e.components);return a.a.createElement(i.Provider,{value:t},e.children)};var c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},l=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===t.indexOf(r)&&(n[r]=e[r]);return n}(e,["components","mdxType","originalType","parentName"]),l=o(n),s=r,d=l[p+"."+s]||l[s]||u[s]||i;return n?a.a.createElement(d,Object.assign({},{ref:t},c,{components:n})):a.a.createElement(d,Object.assign({},{ref:t},c))}));function s(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=l;var p={};for(var u in t)hasOwnProperty.call(t,u)&&(p[u]=t[u]);p.originalType=e,p[c]="string"==typeof e?e:r,o[1]=p;for(var s=2;s<i;s++)o[s]=n[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}l.displayName="MDXCreateElement"}}]);