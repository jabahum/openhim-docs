/*! For license information please see b4641276.396723b2.js.LICENSE */
(window.webpackJsonp=window.webpackJsonp||[]).push([[357],{451:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return u}));var n=a(1),s=(a(0),a(589)),r=a(591),o=a(592);const c={id:"create",title:"Create User",sidebar_label:"Create",keywords:["OpenHIM","API","User","Create"],description:"Create an OpenHIM User via the API"},i=[{value:"Create User",id:"create-user",children:[]},{value:"Example",id:"example",children:[]}],l={rightToc:i},p="wrapper";function u({components:e,...t}){return Object(s.b)(p,Object(n.a)({},l,t,{components:e,mdxType:"MDXLayout"}),Object(s.b)("h2",{id:"create-user"},"Create User"),Object(s.b)("p",null,"To create a user, you will need to make a TLS request to the OpenHIM API for the below method and endpoint and supply the JSON object for the user."),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-curl"}),"Method: POST\nEndpoint: {openhim_url}:8080/users\nPayload: JSON object of the user\n")),Object(s.b)("h2",{id:"example"},"Example"),Object(s.b)(r.a,{defaultValue:"lang",values:[{label:"Languages",value:"lang"},{label:"Sample Data",value:"sample"}],mdxType:"Tabs"},Object(s.b)(o.a,{value:"lang",mdxType:"TabItem"},Object(s.b)("p",null,"  Before we can send our request to the OpenHIM API we need to ensure that we construct our valid HTTP headers to successfully authenticate with the OpenHIM API."),Object(s.b)(r.a,{defaultValue:"nodejs",values:[{label:"NodeJS",value:"nodejs"},{label:"Bash",value:"bash"}],mdxType:"Tabs"},Object(s.b)(o.a,{value:"nodejs",mdxType:"TabItem"},Object(s.b)("p",null,"  Copy the below code at the bottom of your nodejs script that handles the authentication of the OpenHIM headers as described in the ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"../introduction/authentication"}),"authentication section"),"."),Object(s.b)("p",null,"  Replace the ",Object(s.b)("inlineCode",{parentName:"p"},"openhimOptions")," values with the correct implementation details and supply the ",Object(s.b)("inlineCode",{parentName:"p"},"SampleData")," payload to submit. You will also need to update the userPassword variable to your desired password. The password will be used to create the passwordHash and passwordSalt, which are added to the ",Object(s.b)("inlineCode",{parentName:"p"},"SampleData")," payload."),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"// append below code to the \"openhim-api.js\" script containing the authentication methods.\n// This is described within the authentication section\n\nconst genUserPassword = (password) => {\n  return new Promise((resolve) => {\n    const passwordSalt = crypto.randomBytes(16)\n\n    // create passhash\n    let shasum = crypto.createHash('sha512')\n    shasum.update(password)\n    shasum.update(passwordSalt.toString('hex'))\n    const passwordHash = shasum.digest('hex')\n\n    resolve({\n      \"passwordSalt\": passwordSalt.toString('hex'),\n      \"passwordHash\": passwordHash\n    })\n  })\n}\n\n(async () => {\n  const openhimOptions = {\n    apiURL: 'https://localhost:8080',\n    apiEndpoint: '/users',\n    username: 'root@openhim.org',\n    password: 'openhim-password',\n    rejectUnauthorized: false\n  }\n\n  const userPassword = \"user-password\"\n  const userPasswordDetails = await genUserPassword(userPassword)\n\n  const SampleData = 'SampleData'\n\n  SampleData.passwordHash = userPasswordDetails.passwordHash\n  SampleData.passwordSalt = userPasswordDetails.passwordSalt\n\n  const headers = await genAuthHeaders(openhimOptions)\n\n  const options = {\n    method: 'POST',\n    url: `${openhimOptions.apiURL}${openhimOptions.apiEndpoint}`,\n    rejectUnauthorized: openhimOptions.rejectUnauthorized,\n    headers: headers,\n    body: SampleData,\n    json: true\n  }\n\n  request(options, (error, response, body) => {\n    if (error) throw new Error(error)\n\n    console.log({\n      statusCode: response.statusCode,\n      body\n    })\n  })\n})()\n")),Object(s.b)("p",null,"  Execute the below command in your terminal to run the nodejs script"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"node openhim-api.js\n"))),Object(s.b)(o.a,{value:"bash",mdxType:"TabItem"},Object(s.b)("p",null,"  Ensure that you have created your bash script to construct the HTTP authentication headers and send the request to the OpenHIM API as described in the ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"../introduction/authentication"}),"authentication section"),"."),Object(s.b)("p",null,"  To create a user, you first need to generate a password hash and salt. The script below can be used for this"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-curl"}),'# gen-user-password.sh\n\n#!/bin/bash\nif (( $# < 1)); then\n    echo "OpenHIM User Password: Curl wrapper that generates the user Password details";\n    echo "Usage: $0 PASSWORD";\n    exit 0;\nfi\npass=$1;\nshift;\nshift;\n\nsalt=`cat /dev/urandom | tr -dc \'abcdef0-9\' | fold -w 32 | head -n 1`;\npasshash=`echo -n "$pass$salt" | shasum -a 512 | awk \'{print $1}\'`;\n\necho Password Salt: $salt\necho Password Hash: $passhash\n\necho "";\n')),Object(s.b)("p",null,"  Copy and execute the bash script above with the below command. Substitute the <USER_PASSWORD> with your desired password before executing."),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-curl"}),"./gen-user-password.sh <USER_PASSWORD>\n")),Object(s.b)("p",null,"  Execute the below command in your terminal where the file is located with the required arguments to create the user. Replace the placeholder arguments with the correct implementation details and ensure your ",Object(s.b)("inlineCode",{parentName:"p"},"SampleData.json")," file exists with the user object. Add the generated passwordHash and passwordSalt to the ",Object(s.b)("inlineCode",{parentName:"p"},"SampleData.json")," before executing the command."),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-curl"}),'./openhim-api.sh root@openhim.org openhim-password -v https://localhost:8080/users -d @SampleData.json -H "Content-Type:application/json"\n')))),Object(s.b)("p",null,"  The response status will be ",Object(s.b)("inlineCode",{parentName:"p"},"201")," if successful."),Object(s.b)("p",null,"  Once created, a user's activation email is sent to the users email. For this email to be sent, the OpenHIM needs to be configured with the correct mail settings. This can be\ndone in the ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jembi/openhim-core-js/blob/master/config/default.json#L66"}),"configuration"))),Object(s.b)(o.a,{value:"sample",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "settings": {\n    "list": {},\n    "filter": {\n      "limit":100\n    }\n  },\n  "groups": ["root@openhim.org"],\n  "email": "root2@openhim.org",\n  "firstname": "Test",\n  "surname": "Tester",\n  "msisdn": "",\n  "passwordAlgorithm": "sha512",\n  "passwordSalt": "32d0efc6add6dbd29ed46060a2744e0f",\n  "passwordHash": "9362d691a255ffa5c3d1c4992c31d96ea1f3cf71edc4f17685a29d634eaf9849e2d7a4f7237b7b2bca2fb17cee7ec05b4b9cae82c50a81158c45117136c9b3b7"\n}\n')))))}u.isMDXComponent=!0},589:function(e,t,a){"use strict";a.d(t,"a",(function(){return c})),a.d(t,"b",(function(){return u}));var n=a(0),s=a.n(n),r=s.a.createContext({}),o=function(e){var t=s.a.useContext(r),a=t;return e&&(a="function"==typeof e?e(t):Object.assign({},t,e)),a},c=function(e){var t=o(e.components);return s.a.createElement(r.Provider,{value:t},e.children)};var i="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return s.a.createElement(s.a.Fragment,{},t)}},p=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,c=e.parentName,i=function(e,t){var a={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&-1===t.indexOf(n)&&(a[n]=e[n]);return a}(e,["components","mdxType","originalType","parentName"]),p=o(a),u=n,d=p[c+"."+u]||p[u]||l[u]||r;return a?s.a.createElement(d,Object.assign({},{ref:t},i,{components:a})):s.a.createElement(d,Object.assign({},{ref:t},i))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,o=new Array(r);o[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[i]="string"==typeof e?e:n,o[1]=c;for(var u=2;u<r;u++)o[u]=a[u];return s.a.createElement.apply(null,o)}return s.a.createElement.apply(null,a)}p.displayName="MDXCreateElement"},590:function(e,t,a){var n;!function(){"use strict";var a={}.hasOwnProperty;function s(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var r=typeof n;if("string"===r||"number"===r)e.push(n);else if(Array.isArray(n)&&n.length){var o=s.apply(null,n);o&&e.push(o)}else if("object"===r)for(var c in n)a.call(n,c)&&n[c]&&e.push(c)}}return e.join(" ")}e.exports?(s.default=s,e.exports=s):void 0===(n=function(){return s}.apply(t,[]))||(e.exports=n)}()},591:function(e,t,a){"use strict";var n=a(0),s=a.n(n),r=a(590),o=a.n(r),c=a(88),i=a.n(c);const l={left:37,right:39};t.a=function(e){const{block:t,children:a,defaultValue:r,values:c}=e,[p,u]=Object(n.useState)(r),d=[];return s.a.createElement("div",null,s.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:o()("tabs",{"tabs--block":t})},c.map(({value:e,label:t})=>s.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":p===e,className:o()("tab-item",i.a.tabItem,{"tab-item--active":p===e}),key:e,ref:e=>d.push(e),onKeyDown:e=>((e,t,a)=>{switch(a.keyCode){case l.right:((e,t)=>{const a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()})(e,t);break;case l.left:((e,t)=>{const a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()})(e,t)}})(d,e.target,e),onFocus:()=>u(e),onClick:()=>u(e)},t))),s.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},n.Children.toArray(a).filter(e=>e.props.value===p)[0]))}},592:function(e,t,a){"use strict";var n=a(0),s=a.n(n);t.a=function(e){return s.a.createElement("div",null,e.children)}}}]);