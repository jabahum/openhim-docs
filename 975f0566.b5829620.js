(window.webpackJsonp=window.webpackJsonp||[]).push([[150],{234:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return p}));n(0);var a=n(325);function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}const o={id:"openhim-console-release",title:"Create an OpenHIM-console release",sidebar_label:"Create an OpenHIM-console release"},i=[],l={rightToc:i},c="wrapper";function p({components:e,...t}){return Object(a.b)(c,r({},l,t,{components:e,mdxType:"MDXLayout"}),Object(a.b)("p",null,"This page describes the steps to follow to do an OpenHIM console release. Make sure you are on the master branch and it is fully up-to-date before beginning this process. Additionally, ensure that the version of OpenHIM core compatible with this release of OpenHIM console has already been pushed to GitHub."),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("inlineCode",{parentName:"li"},"npm version (major|minor|patch)")," - choose one according to semver. (Use this command, i.e. don't bump manually)"),Object(a.b)("li",{parentName:"ol"},Object(a.b)("inlineCode",{parentName:"li"},"git push origin master")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("inlineCode",{parentName:"li"},"git push origin vx.x.x")," - push the tag that 2 created."),Object(a.b)("li",{parentName:"ol"},"Run ",Object(a.b)("inlineCode",{parentName:"li"},"npm run prepare")," then ",Object(a.b)("inlineCode",{parentName:"li"},"tar cvzf openhim-console-vx.x.x.tar.gz -C dist/ .")),Object(a.b)("li",{parentName:"ol"},"Create a new github release using the tag created in 3 above that includes the release notes and attach the tar.gz distribution created in 4."),Object(a.b)("li",{parentName:"ol"},"Build a debian package and upload it to launchpad. Follow the ",Object(a.b)("a",r({parentName:"li"},{href:"https://github.com/jembi/openhim-console/tree/master/packaging"}),"instructions here"),"."),Object(a.b)("li",{parentName:"ol"},"Build a rpm package, follow the ",Object(a.b)("a",r({parentName:"li"},{href:"http://openhim.readthedocs.io/en/latest/how-to/how-to-build-and-test-rpm-package.html"}),"instructions here"),".")))}p.isMDXComponent=!0},325:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return u}));var a=n(0),r=n.n(a),o=r.a.createContext({}),i=function(e){var t=r.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},l=function(e){var t=i(e.components);return r.a.createElement(o.Provider,{value:t},e.children)};var c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},s=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===t.indexOf(a)&&(n[a]=e[a]);return n}(e,["components","mdxType","originalType","parentName"]),s=i(n),u=a,b=s[l+"."+u]||s[u]||p[u]||o;return n?r.a.createElement(b,Object.assign({},{ref:t},c,{components:n})):r.a.createElement(b,Object.assign({},{ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=s;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}s.displayName="MDXCreateElement"}}]);