(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{139:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"rightToc",(function(){return i})),t.d(n,"default",(function(){return u}));t(0);var r=t(325);function o(){return(o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}const a={id:"run-openhim-on-startup",title:"Run the OpenHIM on startup",sidebar_label:"Run the OpenHIM on startup"},i=[],c={rightToc:i},p="wrapper";function u({components:e,...n}){return Object(r.b)(p,o({},c,n,{components:e,mdxType:"MDXLayout"}),Object(r.b)("p",null,"To help you get the OpenHIM server running on boot we supply a upstart config file (good for Ubuntu or other system that use upstart). Install the upstart config by doing the following:"),Object(r.b)("pre",null,Object(r.b)("code",o({parentName:"pre"},{className:"language-sh"}),"wget https://raw.githubusercontent.com/jembi/openhim-core-js/master/resources/openhim-core.conf\nsudo cp openhim-core.conf /etc/init/\n")),Object(r.b)("p",null,"Then run start the server with:"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"sudo start openhim-core")),Object(r.b)("p",null,"It will automatically startup on reboot."),Object(r.b)("p",null,"If you require custom config you will have to edit ",Object(r.b)("inlineCode",{parentName:"p"},"openhim-core.conf")," to add in the ",Object(r.b)("inlineCode",{parentName:"p"},"--conf")," parameter pointing to your external config file."))}u.isMDXComponent=!0},325:function(e,n,t){"use strict";t.d(n,"a",(function(){return c})),t.d(n,"b",(function(){return s}));var r=t(0),o=t.n(r),a=o.a.createContext({}),i=function(e){var n=o.a.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):Object.assign({},n,e)),t},c=function(e){var n=i(e.components);return o.a.createElement(a.Provider,{value:n},e.children)};var p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},l=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=function(e,n){var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===n.indexOf(r)&&(t[r]=e[r]);return t}(e,["components","mdxType","originalType","parentName"]),l=i(t),s=r,f=l[c+"."+s]||l[s]||u[s]||a;return t?o.a.createElement(f,Object.assign({},{ref:n},p,{components:t})):o.a.createElement(f,Object.assign({},{ref:n},p))}));function s(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=l;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c[p]="string"==typeof e?e:r,i[1]=c;for(var s=2;s<a;s++)i[s]=t[s];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}l.displayName="MDXCreateElement"}}]);