(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{217:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return a})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return m}));var r=t(1),i=(t(0),t(382));const o={id:"openhie",title:"OpenHIE",sidebar_label:"OpenHIE",keywords:["OpenHIM","OpenHIE"],description:"OpenHIE"},a={id:"version-5.2.x/implementations/openhie",title:"OpenHIE",description:"OpenHIE",source:"@site/versioned_docs/version-5.2.x/implementations/openhie.md",permalink:"/docs/implementations/openhie",version:"5.2.x",sidebar_label:"OpenHIE",sidebar:"version-5.2.x/docs",previous:{title:"MomConnect",permalink:"/docs/implementations/momconnect"},next:{title:"Install on CentOS",permalink:"/docs/how-to/install-on-centos"}},c=[{value:"How the OpenHIM is used",id:"how-the-openhim-is-used",children:[]}],p={rightToc:c},s="wrapper";function m({components:e,...n}){return Object(i.b)(s,Object(r.a)({},p,n,{components:e,mdxType:"MDXLayout"}),Object(i.b)("p",null,"OpenHIE is an initiative that aims to provide a reference architecture and workflow specifications for sharing health information between point of care systems in low resource settings. It aims to be standards-based and open such that components of the architecture can be swapped out as is necessary. OpenHIE is made up of a number of sub-communities that each aim to discuss a particular component of the architecture. Each community maintains a reference implementation of their particular component."),Object(i.b)("p",null,"For more information see the ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"http://ohie.org/"}),"OpenHIE website"),"."),Object(i.b)("h2",{id:"how-the-openhim-is-used"},"How the OpenHIM is used"),Object(i.b)("p",null,"The OpenHIM acts as a reference implementation of the interoperability layer component within the OpenHIE architecture. To learn more about this component please see the ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://wiki.ohie.org/display/SUB/Interoperability+Layer+Community"}),"interoperability layer community wiki"),"."))}m.isMDXComponent=!0},382:function(e,n,t){"use strict";t.d(n,"a",(function(){return c})),t.d(n,"b",(function(){return l}));var r=t(0),i=t.n(r),o=i.a.createContext({}),a=function(e){var n=i.a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):Object.assign({},n,e)),t},c=function(e){var n=a(e.components);return i.a.createElement(o.Provider,{value:n},e.children)};var p="mdxType",s={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},m=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=function(e,n){var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&-1===n.indexOf(r)&&(t[r]=e[r]);return t}(e,["components","mdxType","originalType","parentName"]),m=a(t),l=r,u=m[c+"."+l]||m[l]||s[l]||o;return t?i.a.createElement(u,Object.assign({},{ref:n},p,{components:t})):i.a.createElement(u,Object.assign({},{ref:n},p))}));function l(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=m;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c[p]="string"==typeof e?e:r,a[1]=c;for(var l=2;l<o;l++)a[l]=t[l];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);